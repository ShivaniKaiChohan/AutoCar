#include <stdlib.h>
#include <initio.h>
#include <curses.h>
#define BLACK(a)  ((a) == 0)   // need to be adjusted for the specifc car (make note of car number)
#define WHITE(a)  (! BLACK(a))  // white = not(black)

//======================================================================
// line_follower():
// Simple program to test infrared line sensors:
// Drive along a black line. The black line is bordered on both sides
// with a white line to ensure contrast for the line sensors.
//======================================================================
void line_follower(int argc, char *argv[]) 
{
  int ch = 0;
  int irL,irR;  // status of infrared sensors
  int lfL,lfR;  // status of line sensors

  // initio_DriveForward (... ); // todo: Initially, try to drive straight forward

  while (ch != 'q') {
    mvprintw(1, 1,"%s: Press 'q' to end program", argv[0]);
    irL = initio_IrLeft();
    irR = initio_IrRight();
    lfL = initio_IrLineLeft(); // todo: replace by read left line sensor
    lfR = initio_IrLineRight(); // todo: replace by read right line sensor

    if (irL == 1 || irR == 1) {
      mvprintw(3, 1,"Action 1: Stop (IR sensors: %d, %d)     ", irL, irR);
      initio_DriveForward (0); // Stop
    }
    // no obstacle ahead, so focus on line following
    else if (BLACK(lfL) && BLACK(lfR) ) { 
      mvprintw(3, 1,"Action 2: Straight (Line sensors: %d, %d)    ", lfL, lfR);
      initio_DriveForward (100); // go forward
    }
    else if (WHITE(lfR) && BLACK(lfL)) /* todo: change */  {
      // car is too much on the right
      mvprintw(3, 1,"Action 3: Spin left (Line sensors: %d, %d)    ", lfL, lfR);
      initio_SpinLeft(100) ;
     }
    else if (BLACK(lfR) && WHITE(lfL))  {
      // car is too much on the left
      mvprintw(3, 1,"Action 4: Spin right (Line sensors: %d, %d)    ", lfL, lfR);
      initio_SpinRight(100) ;
    }
   else if (WHITE(lfL) && WHITE(lfR) ) {        
      mvprintw(3, 1,"Lost my line (Line sensors: %d, %d)        ", lfL, lfR);
      initio_DriveReverse(75);
    }

    ch = getch();
    if (ch != ERR)
      mvprintw(2, 1,"Key code: '%c' (%d)", ch, ch);
    refresh();  // curses
  } // while

  return;
}
